version: "3"
services:
    # PHP-FPM Service
    shop-fpm:
        build:
            args:
                user: sammy
                uid: 1000
            context: ./
            dockerfile: dockerfile.fpm
        container_name: shop-fpm
        restart: unless-stopped
        tty: true
        environment:
            B_HOST: ${DB_HOST}
            DB_PORT: ${DB_PORT}
            DB_DATABASE: ${DB_DATABASE}
            DB_USERNAME: ${DB_USERNAME}
            DB_PASSWORD: ${DB_PASSWORD}
            APP_URL: ${APP_URL}
            VERSION: ${VERSION}
        working_dir: /var/www/html/
        ports:
            - "9000:9000"
        volumes:
            - ./:/var/www/html/:rw
            - /opt/docker-data/ust-inc/logs:/var/www/html/storage/logs/:rw
            - /opt/docker-data/ust-inc/storage:/var/www/html/storage/
        networks:
            - shop-network

    # Nginx Service
    shop-nginx:
        image: nginx:alpine
        container_name: shop-nginx
        restart: unless-stopped
        tty: true
        ports:
            - "443:443"
        volumes:
            - ./:/var/www/html
            - /opt/docker-data/ust-inc/storage:/var/www/html/storage/:rw
            - /opt/docker-data/ust-inc/logs/nginx:/var/log/nginx:rw
            - ./docker/nginx/conf.d/:/etc/nginx/conf.d/
            - /opt/docker-data/ust-inc/ssl:/etc/nginx/ssl
        networks:
            - shop-network

    # MySQL Service
    shop-db:
        image: mysql:5.7.37
        container_name: shop-db
        restart: always
        tty: true
        command: --default-authentication-plugin=mysql_native_password
        environment:
            DB_HOST: ${DB_HOST}
            DB_PORT: ${DB_PORT}
            DB_DATABASE: ${DB_DATABASE}
            DB_USERNAME: ${DB_USERNAME}
            DB_PASSWORD: ${DB_PASSWORD}
        ports:
            - "127.0.0.1:3306:3306"
        volumes:
            - /opt/docker-data/ust-inc/dbdata:/var/lib/mysql/
        networks:
            - shop-network

  # Redis Service
    shop-redis:
        image: redis:alpine
        container_name: shop-redis
        ports:
            - "6379:6379"
        environment:
            REDIS_HOST: ${REDIS_HOST}
            REDIS_PASSWORD: ${REDIS_PASSWORD}
        networks:
            - shop-network

#Docker Networks
networks:
    shop-network:
        driver: bridge
